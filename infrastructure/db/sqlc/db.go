// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package db

import (
	"log"
	"fmt"
	"context"
	"database/sql"
	_ "github.com/lib/pq"
	"training/goproject/config"
)

type DBTX interface {
	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
	PrepareContext(context.Context, string) (*sql.Stmt, error)
	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
	QueryRowContext(context.Context, string, ...interface{}) *sql.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

func OpenDB() *sql.DB {
	DBPG := "postgres"
	pg_con_string := fmt.Sprintf("user=%s dbname=%s password=%s sslmode=%s",
	config.C.Database.User, config.C.Database.DBName, config.C.Database.Password, config.C.Database.Sslmode)
	db, err := sql.Open(DBPG, pg_con_string)

	if err != nil {
		log.Fatalln(err)
	}

	return db
}

type Queries struct {
	db DBTX
}

func (q *Queries) WithTx(tx *sql.Tx) *Queries {
	return &Queries{
		db: tx,
	}
}
