# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - 'v*'
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  ####################### DEVELOPMENT #######################
  DEV:
    runs-on: ubuntu-latest
    environment: DEV
    
    steps:
     - name: Checkout
       uses: actions/checkout@v3
       with:
          fetch-depth: 0
     - name: Set up Go
       uses: actions/setup-go@v3
       with:
         go-version: 1.18
     - name: Build
       run: go build -v ./...
     - name: Test
       run: go test -v ./...
     - name: lint
       run: |
         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.46.2
          
         golangci-lint run
     - name: Analyze with SonarCloud     
       uses: SonarSource/sonarcloud-github-action@master
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
       with:
         args:
           -Dsonar.projectKey=jte74_GolangRestSwag
           -Dsonar.organization=jte74

  ####################### STAGING #######################
  QA:
 
    environment: QA
    runs-on: ubuntu-latest
    needs: DEV
    
    steps:
     - name: Checkout
       uses: actions/checkout@v3
       with:
          fetch-depth: 0
     - name: Set up Go
       uses: actions/setup-go@v3
       with:
         go-version: 1.18
     - name: Build
       run: go build -v ./...
     - name: Test
       run: go test -v ./...
     - name: lint
       run: |
         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.46.2
          
         golangci-lint run
     - name: Analyze with SonarCloud     
       uses: SonarSource/sonarcloud-github-action@master
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
       with:
         args:
           -Dsonar.projectKey=jte74_GolangRestSwag
           -Dsonar.organization=jte74

  ####################### PRODUCTION #######################
  PROD:
    
    environment: PROD
    runs-on: ubuntu-latest
    needs: QA
    
    steps:
     - name: Checkout
       uses: actions/checkout@v3
       with:
          fetch-depth: 0
     - name: Set up Go
       uses: actions/setup-go@v3
       with:
         go-version: 1.18
     - name: Build
       run: go build -v ./...
     - name: Test
       run: go test -v ./...
     - name: lint
       run: |
         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.46.2
          
         golangci-lint run
     - name: Analyze with SonarCloud     
       uses: SonarSource/sonarcloud-github-action@master
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
       with:
         args:
           -Dsonar.projectKey=jte74_GolangRestSwag
           -Dsonar.organization=jte74

     - uses: actions/checkout@v2 
     - uses: ./.github/workflows/goreleaser
